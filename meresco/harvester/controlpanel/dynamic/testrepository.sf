## begin license ##
#
# "Seecr Metastreams" is a fork of Meresco Harvester that demonstrates the translation of traditional metadata into modern events streams.
#
# Copyright (C) 2017, 2021 Seecr (Seek You Too B.V.) https://seecr.nl
#
# This file is part of "Seecr Metastreams"
#
# "Seecr Metastreams" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Seecr Metastreams" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Seecr Metastreams"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

def main(arguments, **kwargs):
    repository = observable.call.getRepository(
        identifier=arguments.get('repositoryId', [None])[0],
        domainId=arguments.get('domainId', [None])[0])
    queryArguments = dict(
        verb="ListRecords",
        metadataPrefix=repository.get('metadataPrefix'))
    setName = repository.get('set')
    if setName:
        queryArguments['set'] = setName
    yield http.redirect("{}?{}".format("/onlinemapping", urlencode(dict(
        mappingId=repository.get('mappingId'),
        inputurl="{}?{}".format(repository.get('baseurl'), urlencode(queryArguments))))))
