## begin license ##
#
# "Metastreams Harvester" is a fork of Meresco Harvester that demonstrates
# the translation of traditional metadata into modern events streams.
#
# Copyright (C) 2021 Seecr (Seek You Too B.V.) https://seecr.nl
#
# This file is part of "Metastreams Harvester"
#
# "Metastreams Harvester" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Metastreams Harvester" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Metastreams Harvester"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

import page2

def main(tag, **kwargs):
    data = page2.findPath("data", dict(status=render_data_status), **kwargs)
    if not data is None:
        yield data(tag=tag, **kwargs)
        return
    
    with tag("div"):
        with tag("table", id_="status-table"):
            with tag("thead"):
                with tag("tr"):
                    for each in ["Repository", "Datum", "# Geharvest", "# Uploads", "# Deletes"]:
                        with tag("th"):
                            yield each

def render_data_status(arguments, **kwargs):
    domainId = arguments.get('domainId', [None])[0]
    repositoryGroupId = arguments.get('repositoryGroupId', [None])[0]
    repositoryId = arguments.get('repositoryId', [None])[0]
    statuses = observable.call.getStatus(domainId=domainId, repositoryGroupId=repositoryGroupId, repositoryId=repositoryId)

    data = {"data": []}
    for each in statuses:
        data['data'].append([each[i] for i in ['repositoryId', 'lastHarvestDate', 'harvested', 'uploaded', 'deleted']])
    yield "HTTP/1.0 200 OK\r\n"
    yield "Content-Type: application/json\r\n"
    yield "\r\n"
    yield dumps(data)
