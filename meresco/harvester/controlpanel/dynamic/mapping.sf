## begin license ##
#
# "Metastreams Harvester" is a fork of Meresco Harvester that demonstrates
# the translation of traditional metadata into modern events streams.
#
# Copyright (C) 2017, 2020-2021 Seecr (Seek You Too B.V.) https://seecr.nl
# Copyright (C) 2020 Stichting Kennisnet https://www.kennisnet.nl
#
# This file is part of "Metastreams Harvester"
#
# "Metastreams Harvester" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Metastreams Harvester" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Metastreams Harvester"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

import page
import common

#req.req.headers_out['Cache-control'] = 'no-cache'


def main(**kwargs):
    user = kwargs.get('session', {}).get('user')
    domain = kwargs.get('session', {}).get('domain')
    domainId = kwargs.get('arguments', {}).get('domainId', [None])[0]
    if not user or (not user.isAdmin() and domain != domainId):
        yield http.redirect("/login")
        return
    yield page.layoutWithMenu(_contents, **kwargs)


def _contents(arguments, session, **kwargs):
    mappingId = arguments.get('identifier', [None])[0]
    domainId = arguments.get('referrerDomain', [None])[0]

    mapping = observable.call.getMapping(domainId=domainId, identifier=mappingId)
    mappingName = mapping.get('name', '')
    user = session.get('user')

    yield """<h1>Mapping Administration</h1>"""
    yield common.showErrorMessage(arguments)
    yield """
    <div>
        <h4>Mapping ({})</h4>""".format(escapeHtml(mappingName or '<No Name>'))

    if user.isAdmin():
        yield _adminView(mapping, domainId)
    else:
        yield _userView(mapping, domainId)
    yield """
        <p><a href="{domainEditLink}">Back to domain</a></p>
    </div>""".format(domainEditLink="/domain?{}".format(urlencode(dict(identifier=domainId))))

def _adminView(mapping, domainId):
    yield """
            <form method="post" action="/actions/updateMapping">
                <input type="hidden" name="redirectUri" value="{mappingEditLink}">
                <input type="hidden" name="identifier" value="{mappingId}">
                <input type="hidden" name="domainId" value="{domainId}">
                <table class="edit">
                    <tr>
                        <td>Name:</td>
                        <td style="width: 80%; min-width: 20em;"><input type="text" name="name" value="{name}"></td>
                    </tr>
                    <tr>
                        <td valign="top">Description:</td>
                        <td><textarea class="autosize" name="description">{description}</textarea></td>
                    </tr>
                    <tr>
                        <td valign="top">Script:</td>
                        <td><textarea class="autosize" name="code">{code}</textarea></td>
                    </tr>
                </table>
                <p><input type="submit" name="action" class="butt" value="Validate and Save" accesskey="s"></p>
            </form>""".format(
        mappingEditLink="/mapping?{}".format(urlencode(dict(identifier=mapping.get('identifier'), referrerDomain=domainId))),
        mappingId=mapping.get('identifier'),
        domainId=domainId,
        name=escapeHtml(mapping.get('name') or ''),
        description=escapeHtml(mapping.get('description') or ''),
        code=escapeHtml(mapping.get("code") or ""))


def _userView(mapping, domainId):
    yield """
            <table>
                <tr>
                    <td>Name:</td>
                    <td>{name}</td>
                </tr>
                <tr>
                    <td valign="top">Description:</td>
                    <td><pre>{description}</pre></td>
                </tr>
                <tr>
                    <td valign="top">Script:</td>
                    <td><pre>{code}</pre></td>
                </tr>
            </table>""".format(
        name=escapeHtml(mapping.get('name') or ''),
        description=escapeHtml(mapping.get('description') or ''),
        code=escapeHtml(mapping.get('code') or ''))
